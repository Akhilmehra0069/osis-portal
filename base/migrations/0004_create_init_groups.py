# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-06-08 12:18
from __future__ import unicode_literals
from django.core.management.sql import emit_post_migrate_signal

from django.db import migrations


def add_administrators_group(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, db_alias)
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    administrators_group, created = Group.objects.get_or_create(name='administrators')
    if created:
        is_admin_perm = Permission.objects.get(codename='is_administrator')
        administrators_group.permissions.add(is_admin_perm)


def add_tutors_group(apps, schema_editor):
    # create group
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, db_alias)
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    tutors_group, created = Group.objects.get_or_create(name='tutors')
    if created:
        # Add permissions to group
        is_tutor_perm = Permission.objects.get(codename='is_tutor')
        tutors_group.permissions.add(is_tutor_perm)


def add_students_group(apps, schema_editor):
    # create group
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, db_alias)
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    student_group, created = Group.objects.get_or_create(name='students')
    if created:
        # Add permissions to group
        is_student_perm = Permission.objects.get(codename='is_student')
        student_group.permissions.add(is_student_perm)


def add_authorisations_managers_group(apps, schema_editor):
    # create group
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, db_alias)
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    athorisations_managers_group, created = Group.objects.get_or_create(name='authorisations_managers')
    if created:
        # Add permissions to group
        add_group_perm = Permission.objects.get(codename='add_group')
        change_group_perm = Permission.objects.get(codename='change_group')
        change_user_perm = Permission.objects.get(codename='change_user')
        is_administrator_perm = Permission.objects.get(codename='is_administrator')
        athorisations_managers_group.permissions.add(add_group_perm, change_group_perm,
                                                     change_user_perm, is_administrator_perm)

class Migration(migrations.Migration):

    dependencies = [
        ('base', '0003_permissions_creation'),
        ('contenttypes', '__latest__'),
    ]

    operations = [
        migrations.RunPython(add_administrators_group),
        migrations.RunPython(add_tutors_group),
        migrations.RunPython(add_students_group),
        migrations.RunPython(add_authorisations_managers_group),
    ]